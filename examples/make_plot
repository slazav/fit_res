#!/bin/sh -efu

# usage: make_plot <ifile> <ofile> [fit_res options]

ifile=$1
shift
ofile=$1
shift

## fit and make gnuplot script
res=$(cat $ifile | ../fit_res --fmt_out 1 "$@")

cat > $ofile <<EOF
#!/usr/bin/gnuplot

file = "$ifile"
$res

if (fit_func==0){
  X(f) = A + (C*(f0**2-f**2) + D*f*df) / ((f0**2-f**2)**2 + (f*df)**2)
  Y(f) = B + (D*(f0**2-f**2) - C*f*df) / ((f0**2-f**2)**2 + (f*df)**2)
}
if (fit_func==1){
  X(f) = A + (C*(f0**2-f**2) + D*f*df) / ((f0**2-f**2)**2 + (f*df)**2) + E*(f-f0)
  Y(f) = B + (D*(f0**2-f**2) - C*f*df) / ((f0**2-f**2)**2 + (f*df)**2) + F*(f-f0)
}
if (fit_func==2){
  X(f) = A - f*(D*(f0**2-f**2) - C*f*df) / ((f0**2-f**2)**2 + (f*df)**2)
  Y(f) = B + f*(C*(f0**2-f**2) + D*f*df) / ((f0**2-f**2)**2 + (f*df)**2)
}
if (fit_func==3){
  X(f) = A - f*(D*(f0**2-f**2) - C*f*df) / ((f0**2-f**2)**2 + (f*df)**2) + E*(f-f0)
  Y(f) = B + f*(C*(f0**2-f**2) + D*f*df) / ((f0**2-f**2)**2 + (f*df)**2) + F*(f-f0)
}
if (fit_func==4){
  X(f) = A + (C*(f0**2-f**2) + D*f*df) / ((f0**2-f**2)**2 + (f*df)**2) + (C2*(f02**2-f**2) + D2*f*df2) / ((f02**2-f**2)**2 + (f*df2)**2)
  Y(f) = B + (D*(f0**2-f**2) - C*f*df) / ((f0**2-f**2)**2 + (f*df)**2) + (D2*(f02**2-f**2) - C2*f*df2) / ((f02**2-f**2)**2 + (f*df2)**2)
}
if (fit_func==5){
  X(f) = A - f*(D*(f0**2-f**2) - C*f*df) / ((f0**2-f**2)**2 + (f*df)**2) - f*(D2*(f02**2-f**2) - C2*f*df2) / ((f02**2-f**2)**2 + (f*df2)**2)
  Y(f) = B + f*(C*(f0**2-f**2) + D*f*df) / ((f0**2-f**2)**2 + (f*df)**2) + f*(C2*(f02**2-f**2) + D2*f*df2) / ((f02**2-f**2)**2 + (f*df2)**2)
}

set nokey
set samples 1000

plot\
  file using 2:(\$3-A) with points lc 3 pt 7 ps 1,\
  file using 2:(\$4-B) with points lc 6 pt 7 ps 1,\
  X(x)-A lc 0, Y(x)-B lc 0

pause -1

set parametric
plot [f0-5*df:f0+5*df]\
  file using 3:4 with points lc 2 pt 7 ps 1,\
  X(t), Y(t) lc 0


pause -1

EOF

chmod 755 $ofile
